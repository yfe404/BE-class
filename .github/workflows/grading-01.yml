name: Task_01 Evaluation

on:
  push:
    paths:
      - 'uploads/task01/**'
  pull_request:
    paths:
      - 'uploads/task01/**'

permissions:
  contents: write

jobs:
  evaluate-task01:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check file existence
      run: |
        if [ ! -f "uploads/task01/return_42.c" ]; then
          echo "‚ùå Submission file not found"
          exit 1
        fi

    - name: Check forbidden functions
      run: |
        cd uploads/task01/
        if grep -E "(printf|scanf|system|exec)" return_42.c; then
          echo "‚ùå Forbidden function detected"
          exit 1
        fi

    - name: Compile the program
      run: |
        cd uploads/task01/
        cc -Wall -Wextra -Werror -o return_42 return_42.c

    - name: Test program execution
      run: |
        cd uploads/task01/
        ./return_42 || exit_code=$?
        if [ $exit_code -eq 42 ]; then
          echo "‚úÖ OK"
        else
          echo "‚ùå KO"
          exit 1
        fi

    - name: Update README with next task
      if: success()
      run: |
        OWNER="${{ github.repository_owner }}"
        REPO="${{ github.event.repository.name }}"

        if [ -f ".github/subjects/task02.md" ]; then
          cp .github/subjects/task02.md current_task.md
          sed -i "s/OWNER/$OWNER/g" current_task.md
          sed -i "s/REPO/$REPO/g" current_task.md
          python3 << 'PYTHON_SCRIPT'
        import re
        with open('README.md', 'r') as f:
            content = f.read()
        with open('current_task.md', 'r') as f:
            task_content = f.read()
        task_pattern = r'(# Task_\d+)\n.*?(?=\Z)'
        updated_content = re.sub(
            task_pattern, 
            task_content.strip(), 
            content, 
            flags=re.DOTALL
        )
        with open('README.md', 'w') as f:
            f.write(updated_content)
        PYTHON_SCRIPT
          rm current_task.md
        fi

    - name: Commit README changes
      if: success()
      run: |
        git config --local user.email "batidora-action@github.com"
        git config --local user.name "üåÄ batidora"
        git add README.md
        git commit -m "‚úÖ Task_01 successfully passed" || exit 0
        git push
